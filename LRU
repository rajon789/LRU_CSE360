#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n = 4; //cout << "n: "; cin >> n;
    int m = 12; //cout << "m: "; cin >> m;
    int col = n; int row = m/n;
    int cache[row][col];
    int temp[row] = {0};
    int idx_set_1 = 0;


    for(int i=0;i<row;i++)
    {
        for(int j=0;j<col;j++)
            {
                cache[i][j] = -1;
            }
    }

    int val; cout << "Insert data: ";
    int chek_same_val = -1;
    while(cin >> val)
    {
        if(val == -1)
            break;

        bool check_HM = false;
            int cache_idx_counter = val % row;
            int col_idx = temp[cache_idx_counter];
            if(cache[cache_idx_counter][col_idx-1]!= val)
                {
                    for(int i=0;i<row;i++)
                    {
                        for(int j=0;j<col;j++)
                        {
                            if(cache[i][j] == val)
                                {
                                    cout << "Hit" << endl;
                                    break;
                                }
                            else
                            {
                                check_HM = true;
                            }
                        }
                    }

                    if(check_HM)
                        {
                            cout << "Miss" << endl;
                        }

                    cache[cache_idx_counter][col_idx] = val;
                    if(temp[cache_idx_counter] < col)
                    {
                        temp[cache_idx_counter]++;
                    }
                    else
                    {
                        cout << "LRU" << endl;
                    }
                    
                    chek_same_val = val;
                }
            else
                {
                    cout << "Hit" << endl;
                }



        for(int i=0;i<row;i++)
        {
            for(int j=0;j<col;j++)
                {
                    cout << cache[i][j] << " ";
                }
            cout << endl;
        }
    }
}
